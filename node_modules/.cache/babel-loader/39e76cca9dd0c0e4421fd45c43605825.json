{"ast":null,"code":"// import axios from \"axios\";\n// import { toast } from \"react-toastify\";\n// export default axios.create({\n//   baseURL: \"http://localhost:8000/\",\n//   headers: {\n//     \"Content-type\": \"application/json\"\n//   }\n// });\n// export const setAxiosAuthToken = token => {\n//   if (typeof token !== \"undefined\" && token) {\n//     // Apply for every request\n//     axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\n//   } else {\n//     // Delete auth header\n//     delete axios.defaults.headers.common[\"Authorization\"];\n//   }\n// };\n// export const toastOnError = error => {\n//   if (error.response) {\n//     // known error\n//     toast.error(JSON.stringify(error.response.data));\n//   } else if (error.message) {\n//     toast.error(JSON.stringify(error.message));\n//   } else {\n//     toast.error(JSON.stringify(error));\n//   }\n// };\n// export const isEmpty = value =>\n//   value === undefined ||\n//   value === null ||\n//   (typeof value === \"object\" && Object.keys(value).length === 0) ||\n//   (typeof value === \"string\" && value.trim().length === 0);","map":{"version":3,"sources":["/Users/leon/projects/1nceuk/src/components/login/axios.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["// import axios from \"axios\";\n// import { toast } from \"react-toastify\";\n\n// export default axios.create({\n//   baseURL: \"http://localhost:8000/\",\n//   headers: {\n//     \"Content-type\": \"application/json\"\n//   }\n// });\n\n// export const setAxiosAuthToken = token => {\n//   if (typeof token !== \"undefined\" && token) {\n//     // Apply for every request\n//     axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\n//   } else {\n//     // Delete auth header\n//     delete axios.defaults.headers.common[\"Authorization\"];\n//   }\n// };\n\n// export const toastOnError = error => {\n//   if (error.response) {\n//     // known error\n//     toast.error(JSON.stringify(error.response.data));\n//   } else if (error.message) {\n//     toast.error(JSON.stringify(error.message));\n//   } else {\n//     toast.error(JSON.stringify(error));\n//   }\n// };\n\n// export const isEmpty = value =>\n//   value === undefined ||\n//   value === null ||\n//   (typeof value === \"object\" && Object.keys(value).length === 0) ||\n//   (typeof value === \"string\" && value.trim().length === 0);"]},"metadata":{},"sourceType":"module"}